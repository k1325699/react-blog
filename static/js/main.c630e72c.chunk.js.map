{"version":3,"sources":["context.js","utils.js","WebAPI.js","Page/HomePage/HomePage.js","Page/ListPage/ListPage.js","Page/LoginPage/LoginPage.js","Page/RegisterPage/RegisterPage.js","Page/PostPage/PostPage.js","Page/AboutPage/AboutPage.js","Page/AddPostPage/AddPostPage.js","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getDescPosts","a","fetch","response","json","getAscPosts","getPost","id","login","username","password","method","headers","body","JSON","stringify","register","nickname","getMe","authorization","data","addPost","title","Root","styled","div","SortWrapper","SortButtonWrapper","SortButton","button","props","$active","PostContainer","PostTitle","Link","PostDate","Post","post","to","Date","createdAt","toLocaleString","PageChange","num","totalPage","handlePrePageChage","handleNextPageChage","PageChangeWrapper","PageChangeButton","onClick","PageChangeP","NowPageSpan","p","span","HomePage","useState","posts","setPosts","sort","setSort","setNum","pagePosts","setPagePosts","totalPost","filter","length","Math","ceil","nowPagePost","useCallback","pageSize","slice","useEffect","console","log","then","map","ListPage","LoginWrapper","LoginForm","form","LoginTitle","h2","LoginLabel","label","LoginInput","input","ButtonDiv","ErrorMessage","LoginButton","ToLoginPage","LoginPage","setUser","useContext","history","useHistory","setUsername","setPassword","errorMessage","setErrorMessage","onSubmit","e","preventDefault","ok","message","removeItem","toString","push","htmlFor","type","value","onChange","target","RegisterWrapper","RegisterForm","RegisterTitle","RegisterLabel","RegisterInput","RegisterButton","RegisterPage","setNickname","PortWrapper","PostContextWrapper","PortTitle","h1","PortTime","PostContent","PostContentP","PostContext","PostPage","useParams","setPost","context","AboutWrapper","AboutTitle","AboutContentTitle","AboutPage","AddPortWrapper","AddPortForm","AddPortLabel","AddPortTitleInput","AddPortBodyTextarea","textarea","AddPortButton","AddPostPage","setTitle","setBody","HeaderWrapper","HeaderContainer","Brand","NavbarList","Nav","NavNoLink","LeftContainer","Header","location","useLocation","user","pathname","App","useLayoutEffect","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c630e72c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getDescPosts = async () => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`);\r\n  return await response.json();\r\n};\r\nexport const getAscPosts = async () => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=createdAt`);\r\n  return await response.json();\r\n};\r\n\r\nexport const getPost = async (id) => {\r\n  const response = await fetch(`${BASE_URL}/posts?id=${id}`);\r\n  return await response.json();\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\nexport const register = async (username, nickname, password) => {\r\n  const response = await fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      nickname,\r\n      password,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\nexport const getMe = async () => {\r\n  const token = getAuthToken();\r\n  const response = await fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const addPost = async (title, body) => {\r\n  const token = getAuthToken();\r\n  const response = await fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getDescPosts, getAscPosts } from \"../../WebAPI\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Root = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\n\r\nconst SortWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n`;\r\nconst SortButtonWrapper = styled.div`\r\n  border: 1px solid #aa14f0;\r\n  border-radius: 5px;\r\n`;\r\nconst SortButton = styled.button`\r\n  border: none;\r\n  padding: 10px;\r\n  background: none;\r\n  & + & {\r\n    border-left: 1px solid #aa14f0;\r\n  }\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: #aa14f0;\r\n    color: #fff;\r\n  `}\r\n  &:hover {\r\n    background: #aa14f0;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst PostContainer = styled.div`\r\n  border: 1px solid #bc8cf2;\r\n  padding: 16px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  & + & {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  width: 80%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nfunction PageChange({\r\n  num,\r\n  totalPage,\r\n  handlePrePageChage,\r\n  handleNextPageChage,\r\n}) {\r\n  return (\r\n    <PageChangeWrapper>\r\n      {num !== 1 && (\r\n        <PageChangeButton onClick={handlePrePageChage}>＜</PageChangeButton>\r\n      )}\r\n      <PageChangeP>\r\n        <NowPageSpan>{num}</NowPageSpan> / {totalPage}\r\n      </PageChangeP>\r\n\r\n      {num !== totalPage && (\r\n        <PageChangeButton onClick={handleNextPageChage}>＞</PageChangeButton>\r\n      )}\r\n    </PageChangeWrapper>\r\n  );\r\n}\r\nconst PageChangeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  margin-top: 20px;\r\n`;\r\nconst PageChangeButton = styled.button`\r\n  border: none;\r\n  color: #aa14f0;\r\n  background: none;\r\n  font-size: 20px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n`;\r\nconst PageChangeP = styled.p``;\r\nconst NowPageSpan = styled.span`\r\n  color: #bc8cf2;\r\n`;\r\n\r\nexport default function HomePage() {\r\n  //usePagination\r\n  const [posts, setPosts] = useState([]);\r\n  //desc,asc\r\n  const [sort, setSort] = useState(\"desc\");\r\n  const [num, setNum] = useState(1);\r\n  const [pagePosts, setPagePosts] = useState([]);\r\n  const totalPost = posts.filter((post) => post.title.length >= 20).length;\r\n  const pageSize = 10;\r\n  const totalPage = Math.ceil(totalPost / pageSize);\r\n  const nowPagePost = useCallback(\r\n    (num, pageSize) => {\r\n      setPagePosts(\r\n        posts\r\n          .filter((post) => post.title.length >= 20)\r\n          .slice((num - 1) * pageSize, (num - 1) * pageSize + pageSize)\r\n      );\r\n    },\r\n    [posts]\r\n  );\r\n  useEffect(() => {\r\n    console.log(sort);\r\n    if (sort === \"desc\") {\r\n      return getDescPosts().then((posts) => setPosts(posts));\r\n    }\r\n    return getAscPosts().then((posts) => setPosts(posts));\r\n  }, [sort]);\r\n  useEffect(() => {\r\n    nowPagePost(num, pageSize);\r\n  }, [nowPagePost, num]);\r\n  const handlePrePageChage = () => {\r\n    setNum(num - 1);\r\n  };\r\n  const handleNextPageChage = () => {\r\n    setNum(num + 1);\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <SortWrapper>\r\n        <SortButtonWrapper>\r\n          <SortButton $active={sort === \"desc\"} onClick={() => setSort(\"desc\")}>\r\n            由新到舊\r\n          </SortButton>\r\n          <SortButton $active={sort === \"asc\"} onClick={() => setSort(\"asc\")}>\r\n            由舊到新\r\n          </SortButton>\r\n        </SortButtonWrapper>\r\n      </SortWrapper>\r\n      {pagePosts.map((post) => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n      <PageChange\r\n        num={num}\r\n        totalPage={totalPage}\r\n        handlePrePageChage={handlePrePageChage}\r\n        handleNextPageChage={handleNextPageChage}\r\n      />\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getDescPosts, getAscPosts } from \"../../WebAPI\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Root = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\nconst SortWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n`;\r\nconst SortButtonWrapper = styled.div`\r\n  border: 1px solid #aa14f0;\r\n  border-radius: 5px;\r\n`;\r\nconst SortButton = styled.button`\r\n  border: none;\r\n  padding: 10px;\r\n  background: none;\r\n  & + & {\r\n    border-left: 1px solid #aa14f0;\r\n  }\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: #aa14f0;\r\n    color: #fff;\r\n  `}\r\n  &:hover {\r\n    background: #aa14f0;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst PostContainer = styled.div`\r\n  border: 1px solid #bc8cf2;\r\n  padding: 16px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  & + & {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  width: 80%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  /* width: 20%; */\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nfunction PageChange({\r\n  num,\r\n  totalPage,\r\n  handlePrePageChage,\r\n  handleNextPageChage,\r\n}) {\r\n  return (\r\n    <PageChangeWrapper>\r\n      {num !== 1 && (\r\n        <PageChangeButton onClick={handlePrePageChage}>＜</PageChangeButton>\r\n      )}\r\n      <PageChangeP>\r\n        <NowPageSpan>{num}</NowPageSpan> / {totalPage}\r\n      </PageChangeP>\r\n\r\n      {num !== totalPage && (\r\n        <PageChangeButton onClick={handleNextPageChage}>＞</PageChangeButton>\r\n      )}\r\n    </PageChangeWrapper>\r\n  );\r\n}\r\nconst PageChangeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  margin-top: 20px;\r\n`;\r\nconst PageChangeButton = styled.button`\r\n  border: none;\r\n  color: #aa14f0;\r\n  background: none;\r\n  font-size: 20px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n`;\r\nconst PageChangeP = styled.p``;\r\nconst NowPageSpan = styled.span`\r\n  color: #bc8cf2;\r\n`;\r\n\r\nexport default function ListPage() {\r\n  //usePagination\r\n  const [posts, setPosts] = useState([]);\r\n  //desc,asc\r\n  const [sort, setSort] = useState(\"desc\");\r\n  const [num, setNum] = useState(1);\r\n  const [pagePosts, setPagePosts] = useState([]);\r\n  const totalPost = posts.length;\r\n  const pageSize = 10;\r\n  const totalPage = Math.ceil(totalPost / pageSize);\r\n  posts.map((post) => console.log(post.title.length));\r\n  const nowPagePost = useCallback(\r\n    (num, pageSize) => {\r\n      setPagePosts(\r\n        posts.slice((num - 1) * pageSize, (num - 1) * pageSize + pageSize)\r\n      );\r\n    },\r\n    [posts]\r\n  );\r\n  useEffect(() => {\r\n    console.log(sort);\r\n    if (sort === \"desc\") {\r\n      return getDescPosts().then((posts) => setPosts(posts));\r\n    }\r\n    return getAscPosts().then((posts) => setPosts(posts));\r\n  }, [sort]);\r\n  useEffect(() => {\r\n    nowPagePost(num, pageSize);\r\n  }, [nowPagePost, num]);\r\n  const handlePrePageChage = () => {\r\n    setNum(num - 1);\r\n  };\r\n  const handleNextPageChage = () => {\r\n    setNum(num + 1);\r\n  };\r\n  return (\r\n    <Root>\r\n      <SortWrapper>\r\n        <SortButtonWrapper>\r\n          <SortButton $active={sort === \"desc\"} onClick={() => setSort(\"desc\")}>\r\n            由新到舊\r\n          </SortButton>\r\n          <SortButton $active={sort === \"asc\"} onClick={() => setSort(\"asc\")}>\r\n            由舊到新\r\n          </SortButton>\r\n        </SortButtonWrapper>\r\n      </SortWrapper>\r\n      {pagePosts.map((post) => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n      <PageChange\r\n        num={num}\r\n        totalPage={totalPage}\r\n        handlePrePageChage={handlePrePageChage}\r\n        handleNextPageChage={handleNextPageChage}\r\n      />\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { login, getMe } from \"../../WebAPI\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { setAuthToken } from \"../../utils\";\r\n\r\nconst LoginWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\nconst LoginForm = styled.form`\r\n  width: 50%;\r\n  padding: 30px 15px 15px;\r\n  border: 1px solid #bc8cf2;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LoginTitle = styled.h2`\r\n  border-left: 5px solid #e56bfa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  padding-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst LoginLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst LoginInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  border: 1px solid #000;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst LoginButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #aa14f0;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    background: #aa14f0;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ToLoginPage = styled(Link)`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nexport default function LoginPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    login(username, password).then((data) => {\r\n      if (data.ok === 0) {\r\n        return setErrorMessage(data.message);\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          localStorage.removeItem(\"token\");\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <LoginWrapper>\r\n      <LoginForm onSubmit={handleLogin}>\r\n        <LoginTitle>登入</LoginTitle>\r\n        <LoginLabel htmlFor=\"username\">帳號</LoginLabel>\r\n        <LoginInput\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <LoginLabel htmlFor=\"password\">密碼</LoginLabel>\r\n        <LoginInput\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <LoginButton>登入</LoginButton>\r\n        </ButtonDiv>\r\n        <hr />\r\n        <ToLoginPage to=\"/register\">前往註冊</ToLoginPage>\r\n      </LoginForm>\r\n    </LoginWrapper>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { register, getMe } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nconst RegisterWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\nconst RegisterForm = styled.form`\r\n  width: 50%;\r\n  padding: 30px 15px 15px;\r\n  border: 1px solid #bc8cf2;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst RegisterTitle = styled.h2`\r\n  border-left: 5px solid #e56bfa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  padding-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RegisterLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst RegisterInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  border: 1px solid #000;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst RegisterButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #aa14f0;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    background: #aa14f0;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ToLoginPage = styled(Link)`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nexport default function RegisterPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!username || !nickname || !password) {\r\n      return setErrorMessage(\"資料不齊全\");\r\n    }\r\n    register(username, password, nickname).then((data) => {\r\n      if (data.ok === 0) {\r\n        if (data.message === \"User exists, please login or change username\") {\r\n          return setErrorMessage(\"帳號已存在\");\r\n        }\r\n        return setErrorMessage(data.message.toString());\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          localStorage.removeItem(\"token\");\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <RegisterWrapper>\r\n      <RegisterForm onSubmit={handleSubmit}>\r\n        <RegisterTitle>註冊</RegisterTitle>\r\n        <RegisterLabel htmlFor=\"username\">帳號</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <RegisterLabel htmlFor=\"nickname\">暱稱</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"text\"\r\n          id=\"nickname\"\r\n          value={nickname}\r\n          onChange={(e) => {\r\n            setNickname(e.target.value);\r\n          }}\r\n        />\r\n        <RegisterLabel htmlFor=\"password\">密碼</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <RegisterButton>註冊</RegisterButton>\r\n        </ButtonDiv>\r\n        <hr />\r\n        <ToLoginPage to=\"/login\">前往登入</ToLoginPage>\r\n      </RegisterForm>\r\n    </RegisterWrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getPost } from \"../../WebAPI\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PortWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\nconst PostContextWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`;\r\nconst PortTitle = styled.h1`\r\n  font-size: 32px;\r\n  padding-bottom: 10px;\r\n  word-wrap: break-word;\r\n`;\r\nconst PortTime = styled.p`\r\n  padding-bottom: 20px;\r\n`;\r\nconst PostContent = styled.div`\r\n  width: 80%;\r\n  border: 1px solid #bc8cf2;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n`;\r\nconst PostContentP = styled.p`\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n`;\r\nfunction PostContext({ post }) {\r\n  return (\r\n    <PostContextWrapper>\r\n      <PostContent>\r\n        <PortTitle>{post[0].title}</PortTitle>\r\n        <PortTime>{new Date(post[0].createdAt).toLocaleString()}</PortTime>\r\n        <PostContentP>{post[0].body}</PostContentP>\r\n      </PostContent>\r\n    </PostContextWrapper>\r\n  );\r\n}\r\nexport default function PostPage() {\r\n  const { id } = useParams();\r\n\r\n  const [post, setPost] = useState();\r\n  useEffect(() => {\r\n    getPost(id).then((context) => setPost(context));\r\n  }, [id]);\r\n  return <PortWrapper>{post && <PostContext post={post} />}</PortWrapper>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AboutWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  min-height: calc(100vh - 64px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  padding: 10px;\r\n`;\r\nconst AboutTitle = styled.h2`\r\n  border-left: 5px solid #e56bfa;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  padding-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\nconst AboutContentTitle = styled.h1`\r\n  font-size: 28px;\r\n  padding-bottom: 15px;\r\n  word-wrap: break-word;\r\n  font-weight: bold;\r\n`;\r\nconst PostContent = styled.div`\r\n  width: 80%;\r\n  border: 1px solid #bc8cf2;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n`;\r\nconst PostContentP = styled.p`\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nexport default function AboutPage() {\r\n  return (\r\n    <AboutWrapper>\r\n      <PostContent>\r\n        <AboutTitle>關於我~</AboutTitle>\r\n        <AboutContentTitle>幻幻</AboutContentTitle>\r\n        <PostContentP>\r\n          你好，我是一個前端新手，剛從Lidemy程式導師計畫第五期畢業，學習相關網路知識、前端、基本的後端，像是基礎的php、express、sequlize、MySQL、基本的資安相關知識，XSS、SQL\r\n          Injection、CSRF 與部署，AWS、Heroku、Nginx、PM2。\r\n        </PostContentP>\r\n      </PostContent>\r\n    </AboutWrapper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { addPost } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AddPortWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  padding: 15px;\r\n  min-height: calc(100vh - 64px);\r\n`;\r\nconst AddPortForm = styled.form`\r\n  width: 100%;\r\n  padding: 15px;\r\n  border: 1px solid #bc8cf2;\r\n  border-radius: 5px;\r\n`;\r\nconst AddPortLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst AddPortTitleInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n`;\r\nconst AddPortBodyTextarea = styled.textarea`\r\n  width: 100%;\r\n  height: 50vh;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  resize: none;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst AddPortButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #aa14f0;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n  &:hover {\r\n    background: #aa14f0;\r\n    color: #fff;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport default function AddPostPage() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !body) {\r\n      return setErrorMessage(\"資料不齊全\");\r\n    }\r\n    addPost(title, body).then((response) => {\r\n      if (response.ok === 0) {\r\n        return setErrorMessage(response.message.toString());\r\n      }\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AddPortWrapper>\r\n      <AddPortForm onSubmit={handleSubmit}>\r\n        <AddPortLabel htmlFor=\"title\">標題</AddPortLabel>\r\n        <AddPortTitleInput\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <AddPortLabel htmlFor=\"content\">內容</AddPortLabel>\r\n        <AddPortBodyTextarea\r\n          id=\"content\"\r\n          value={body}\r\n          onChange={(e) => {\r\n            setBody(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <AddPortButton>提交</AddPortButton>\r\n        </ButtonDiv>\r\n      </AddPortForm>\r\n    </AddPortWrapper>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context\";\r\nconst HeaderWrapper = styled.div`\r\n  height: 64px;\r\n  background: #fff;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid #d0a8fd67;\r\n  /* padding: 0 32px; */\r\n  margin: 0 auto;\r\n`;\r\nconst HeaderContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1024px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Brand = styled(Link)`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  color: #000;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 64px;\r\n`;\r\n\r\nconst Nav = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: #d0a8fd52;\r\n  `}\r\n  &:hover {\r\n    background: #d0a8fd67;\r\n  }\r\n`;\r\nconst NavNoLink = styled.a`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n  &:hover {\r\n    background: #d0a8fd67;\r\n  }\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderContainer>\r\n        <LeftContainer>\r\n          <NavbarList>\r\n            <Nav to=\"/list\" $active={location.pathname === \"/list\"}>\r\n              列表\r\n            </Nav>\r\n            {user && (\r\n              <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\r\n                發布文章\r\n              </Nav>\r\n            )}\r\n          </NavbarList>\r\n        </LeftContainer>\r\n        <Brand to=\"/\">我的React部落格</Brand>\r\n        <NavbarList>\r\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\r\n            關於\r\n          </Nav>\r\n          {!user && (\r\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\r\n              登入\r\n            </Nav>\r\n          )}\r\n          {user && <NavNoLink onClick={handleLogout}>登出</NavNoLink>}\r\n        </NavbarList>\r\n      </HeaderContainer>\r\n    </HeaderWrapper>\r\n  );\r\n}\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { getAuthToken } from \"../../utils\";\r\n\r\nimport HomePage from \"../../Page/HomePage\";\r\nimport ListPage from \"../../Page/ListPage\";\r\nimport LoginPage from \"../../Page/LoginPage\";\r\nimport RegisterPage from \"../../Page/RegisterPage\";\r\nimport PostPage from \"../../Page/PostPage\";\r\nimport AboutPage from \"../../Page/AboutPage\";\r\nimport AddPostPage from \"../../Page/AddPostPage\";\r\nimport Header from \"../Header\";\r\nimport { getMe } from \"../../WebAPI\";\r\n\r\nconst Root = styled.div`\r\n  padding-top: 64px;\r\n  background: #eeeeee78;\r\n`;\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const token = getAuthToken();\r\n  useLayoutEffect(() => {\r\n    if (token) {\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          localStorage.removeItem(\"token\");\r\n        }\r\n        setUser(response.data);\r\n      });\r\n    }\r\n  }, [token]);\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <Root>\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route exact path=\"/list\">\r\n              <ListPage />\r\n            </Route>\r\n            <Route exact path=\"/about\">\r\n              <AboutPage />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginPage />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <RegisterPage />\r\n            </Route>\r\n            <Route path=\"/post/:id\">\r\n              <PostPage />\r\n            </Route>\r\n            <Route path=\"/new-post\">\r\n              <AddPostPage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </Root>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./cssReset.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["context.js","utils.js","WebAPI.js","Page/HomePage/HomePage.js","Page/LoginPage/LoginPage.js","Page/RegisterPage/RegisterPage.js","Page/PostPage/PostPage.js","Page/AddPostPage/AddPostPage.js","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","a","fetch","response","json","data","getPost","id","login","username","password","method","headers","body","JSON","stringify","register","nickname","getMe","authorization","addPost","title","Root","styled","div","PostContainer","PostTitle","Link","PostDate","Post","post","to","Date","createdAt","toLocaleString","PageChange","num","totalPage","handlePrePageChage","handleNextPageChage","PageChangeWrapper","PageChangeButton","onClick","PageChangeP","NowPageSpan","button","p","span","HomePage","useState","posts","setPosts","setNum","pagePosts","setPagePosts","totalPost","length","Math","ceil","nowPagePost","useCallback","pageSize","slice","useLayoutEffect","then","useEffect","map","RegisterWrapper","RegisterForm","form","RegisterTitle","h2","RegisterLabel","label","RegisterInput","input","ButtonDiv","ErrorMessage","RegisterButton","ToLoginPage","LoginPage","useContext","setUser","user","history","useHistory","setUsername","setPassword","errorMessage","setErrorMessage","onSubmit","e","preventDefault","ok","message","removeItem","toString","push","htmlFor","type","value","onChange","target","RegisterPage","setNickname","PortWrapper","PostContextWrapper","PortTitle","h1","PortTime","PostContent","PostContentP","PostContext","PostPage","useParams","setPost","context","AddPortWrapper","AddPortForm","AddPortLabel","AddPortTitleInput","AddPortBodyTextarea","textarea","AddPortButton","AddPostPage","setTitle","setBody","HeaderContainer","Brand","NavbarList","Nav","props","$active","NavNoLink","LeftContainer","Header","location","useLocation","pathname","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f855c569.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken, setAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPosts = async () => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const getPost = async (id) => {\r\n  const response = await fetch(`${BASE_URL}/posts?id=${id}`);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\nexport const register = async (username, nickname, password) => {\r\n  const response = await fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      nickname,\r\n      password,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\nexport const getMe = async () => {\r\n  const token = getAuthToken();\r\n  const response = await fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const addPost = async (title, body) => {\r\n  const token = getAuthToken();\r\n  const response = await fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  });\r\n  return await response.json();\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getPosts } from \"../../WebAPI\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Root = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n`;\r\nconst PostContainer = styled.div`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  width: 80%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 24px;\r\n  color: #333;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  /* width: 20%; */\r\n  color: rgba(0, 0, 0, 0.8);\r\n`;\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nfunction PageChange({\r\n  num,\r\n  totalPage,\r\n  handlePrePageChage,\r\n  handleNextPageChage,\r\n}) {\r\n  return (\r\n    <PageChangeWrapper>\r\n      {num !== 1 && (\r\n        <PageChangeButton onClick={handlePrePageChage}>＜</PageChangeButton>\r\n      )}\r\n      <PageChangeP>\r\n        <NowPageSpan>{num}</NowPageSpan> / {totalPage}\r\n      </PageChangeP>\r\n\r\n      {num !== totalPage && (\r\n        <PageChangeButton onClick={handleNextPageChage}>＞</PageChangeButton>\r\n      )}\r\n    </PageChangeWrapper>\r\n  );\r\n}\r\nconst PageChangeWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  margin-top: 20px;\r\n`;\r\nconst PageChangeButton = styled.button`\r\n  border: none;\r\n  color: red;\r\n  background: none;\r\n  font-size: 20px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n`;\r\nconst PageChangeP = styled.p``;\r\nconst NowPageSpan = styled.span`\r\n  color: #b28b00;\r\n`;\r\n\r\nexport default function HomePage() {\r\n  //usePagination\r\n  const [posts, setPosts] = useState([]);\r\n  const [num, setNum] = useState(1);\r\n  const [pagePosts, setPagePosts] = useState([]);\r\n  const totalPost = posts.length;\r\n  const pageSize = 10;\r\n  const totalPage = Math.ceil(totalPost / pageSize);\r\n  const nowPagePost = useCallback(\r\n    (num, pageSize) => {\r\n      setPagePosts(posts.slice((num - 1) * 5, (num - 1) * 5 + pageSize));\r\n    },\r\n    [posts]\r\n  );\r\n  useLayoutEffect(() => {\r\n    getPosts().then((posts) => setPosts(posts));\r\n  }, []);\r\n  useEffect(() => {\r\n    nowPagePost(num, pageSize);\r\n  }, [nowPagePost, num]);\r\n  const handlePrePageChage = () => {\r\n    setNum(num - 1);\r\n  };\r\n  const handleNextPageChage = () => {\r\n    setNum(num + 1);\r\n  };\r\n  return (\r\n    <Root>\r\n      {pagePosts.map((post) => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n      <PageChange\r\n        num={num}\r\n        totalPage={totalPage}\r\n        handlePrePageChage={handlePrePageChage}\r\n        handleNextPageChage={handleNextPageChage}\r\n      />\r\n    </Root>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getPosts, login, getMe } from \"../../WebAPI\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { setAuthToken, getAuthToken } from \"../../utils\";\r\n\r\nconst RegisterWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst RegisterForm = styled.form`\r\n  width: 50%;\r\n  padding: 30px 15px 15px;\r\n  border: 1px solid #000;\r\n`;\r\n\r\nconst RegisterTitle = styled.h2`\r\n  border-left: 5px solid #e56bfa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  padding-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RegisterLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst RegisterInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst RegisterButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #000;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ToLoginPage = styled(Link)`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nexport default function LoginPage() {\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    login(username, password).then((data) => {\r\n      if (data.ok === 0) {\r\n        return setErrorMessage(data.message);\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          localStorage.removeItem(\"token\");\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <RegisterWrapper>\r\n      <RegisterForm onSubmit={handleLogin}>\r\n        <RegisterTitle>登入</RegisterTitle>\r\n        <RegisterLabel htmlFor=\"username\">帳號</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <RegisterLabel htmlFor=\"password\">密碼</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <RegisterButton>註冊</RegisterButton>\r\n        </ButtonDiv>\r\n        <hr />\r\n        <ToLoginPage to=\"/register\">前往註冊</ToLoginPage>\r\n      </RegisterForm>\r\n    </RegisterWrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { register, getMe } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nconst RegisterWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst RegisterForm = styled.form`\r\n  width: 50%;\r\n  padding: 30px 15px 15px;\r\n  border: 1px solid #000;\r\n`;\r\n\r\nconst RegisterTitle = styled.h2`\r\n  border-left: 5px solid #e56bfa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  padding-left: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RegisterLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst RegisterInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst RegisterButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #000;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ToLoginPage = styled(Link)`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  padding: 10px 0;\r\n  display: block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nexport default function RegisterPage() {\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!username || !nickname || !password) {\r\n      return setErrorMessage(\"資料不齊全\");\r\n    }\r\n    register(username, password, nickname).then((data) => {\r\n      if (data.ok === 0) {\r\n        if (data.message === \"User exists, please login or change username\") {\r\n          return setErrorMessage(\"帳號已存在\");\r\n        }\r\n        return setErrorMessage(data.message.toString());\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((response) => {\r\n        if (response.ok !== 1) {\r\n          localStorage.removeItem(\"token\");\r\n          return setErrorMessage(response.toString());\r\n        }\r\n        setUser(response.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <RegisterWrapper>\r\n      <RegisterForm onSubmit={handleSubmit}>\r\n        <RegisterTitle>註冊</RegisterTitle>\r\n        <RegisterLabel htmlFor=\"username\">帳號</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <RegisterLabel htmlFor=\"nickname\">暱稱</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"text\"\r\n          id=\"nickname\"\r\n          value={nickname}\r\n          onChange={(e) => {\r\n            setNickname(e.target.value);\r\n          }}\r\n        />\r\n        <RegisterLabel htmlFor=\"password\">密碼</RegisterLabel>\r\n        <RegisterInput\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <RegisterButton>註冊</RegisterButton>\r\n        </ButtonDiv>\r\n        <hr />\r\n        <ToLoginPage to=\"/login\">前往登入</ToLoginPage>\r\n      </RegisterForm>\r\n    </RegisterWrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { getPost } from \"../../WebAPI\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\n\r\nconst PortWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  border: 1px solid #000;\r\n  padding: 10px;\r\n`;\r\nconst PostContextWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst PortTitle = styled.h1`\r\n  font-size: 32px;\r\n  padding-bottom: 10px;\r\n  word-wrap: break-word;\r\n`;\r\nconst PortTime = styled.p`\r\n  padding-bottom: 20px;\r\n`;\r\nconst PostContent = styled.div`\r\n  width: 70%;\r\n`;\r\nconst PostContentP = styled.p`\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n`;\r\nfunction PostContext({ post }) {\r\n  return (\r\n    <PostContextWrapper>\r\n      <PostContent>\r\n        <PortTitle>{post[0].title}</PortTitle>\r\n        <PortTime>{new Date(post[0].createdAt).toLocaleString()}</PortTime>\r\n        <PostContentP>{post[0].body}</PostContentP>\r\n      </PostContent>\r\n    </PostContextWrapper>\r\n  );\r\n}\r\nexport default function PostPage() {\r\n  const { id } = useParams();\r\n\r\n  const [post, setPost] = useState();\r\n  useEffect(() => {\r\n    getPost(id).then((context) => setPost(context));\r\n  }, [id]);\r\n  return <PortWrapper>{post && <PostContext post={post} />}</PortWrapper>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { addPost } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AddPortWrapper = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 30px;\r\n  border: 1px solid #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 15px;\r\n`;\r\nconst AddPortForm = styled.form`\r\n  width: 80%;\r\n`;\r\nconst AddPortLabel = styled.label`\r\n  display: block;\r\n  padding-bottom: 15px;\r\n`;\r\nconst AddPortTitleInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n`;\r\nconst AddPortBodyTextarea = styled.textarea`\r\n  width: 100%;\r\n  height: 50vh;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  resize: none;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n`;\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 18px;\r\n`;\r\nconst AddPortButton = styled.button`\r\n  padding: 15px 25px;\r\n  border-radius: 5px;\r\n  box-shadow: none;\r\n  border: 1px solid #000;\r\n  background: #fff;\r\n  margin-left: 30px;\r\n`;\r\nexport default function AddPostPage() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !body) {\r\n      return setErrorMessage(\"資料不齊全\");\r\n    }\r\n    addPost(title, body).then((response) => {\r\n      if (response.ok === 0) {\r\n        return setErrorMessage(response.message.toString());\r\n      }\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AddPortWrapper>\r\n      <AddPortForm onSubmit={handleSubmit}>\r\n        <AddPortLabel htmlFor=\"title\">標題</AddPortLabel>\r\n        <AddPortTitleInput\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <AddPortLabel htmlFor=\"content\">內容</AddPortLabel>\r\n        <AddPortBodyTextarea\r\n          id=\"content\"\r\n          value={body}\r\n          onChange={(e) => {\r\n            setBody(e.target.value);\r\n          }}\r\n        />\r\n        <ButtonDiv>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          <AddPortButton>提交</AddPortButton>\r\n        </ButtonDiv>\r\n      </AddPortForm>\r\n    </AddPortWrapper>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { setAuthToken } from \"../../utils\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  height: 64px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: #fff;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0 32px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Brand = styled.div`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 64px;\r\n`;\r\n\r\nconst Nav = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: rgba(0, 0, 0, 0.1);\r\n  `}\r\n`;\r\nconst NavNoLink = styled.a`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  color: black;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${NavbarList} {\r\n    margin-left: 64px;\r\n  }\r\n`;\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n  };\r\n  return (\r\n    <HeaderContainer>\r\n      <LeftContainer>\r\n        <Brand>我的React部落格</Brand>\r\n        <NavbarList>\r\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\r\n            首頁\r\n          </Nav>\r\n          {user && (\r\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\r\n              發布文章\r\n            </Nav>\r\n          )}\r\n        </NavbarList>\r\n      </LeftContainer>\r\n      <NavbarList>\r\n        {!user && (\r\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\r\n            登入\r\n          </Nav>\r\n        )}\r\n        {user && <NavNoLink onClick={handleLogout}>登出</NavNoLink>}\r\n      </NavbarList>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport { AuthContext } from \"../../context\";\nimport { getAuthToken } from \"../../utils\";\n\nimport HomePage from \"../../Page/HomePage\";\nimport LoginPage from \"../../Page/LoginPage\";\nimport RegisterPage from \"../../Page/RegisterPage\";\nimport PostPage from \"../../Page/PostPage\";\nimport AddPostPage from \"../../Page/AddPostPage\";\nimport Header from \"../Header\";\nimport { getMe } from \"../../WebAPI\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\nfunction App() {\n  const [user, setUser] = useState(null);\n  const token = getAuthToken();\n  useLayoutEffect(() => {\n    if (token) {\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          localStorage.removeItem(\"token\");\n        }\n        setUser(response.data);\n      });\n    }\n  }, [token]);\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <AddPostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./cssReset.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}